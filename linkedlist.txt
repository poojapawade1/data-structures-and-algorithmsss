#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{ int data;
struct node *next;
} *p, *tmp,*tmp1;
void insert_end(int);
void insert_beg(int);
void delete(int);
void display();
void main()
{
int val , n;
p=NULL;
do
{
printf("\n***********MENU*********");
printf("\n1.INSERT AT END");
printf("\n2.INSERT AT BEG");
printf("\n4.DELETE FROM BEG");
printf("\n5.DELETE FROM  END");
printf("\n6.DISPLAY");
printf("\n7.EXIT");
printf("\n Enter your choice : ");
scanf("%d",&n);
switch(n)
{case1: printf("\n Enter the value ");
scanf("%d",&val);
insert_end(val);
break;
case2:printf("\n Enter the value ");
scanf("%d",&val);
insert_beg(val);
break;
case 4:
delete_end();
break;
case 5:
delete_end();
break;
case 6:
display();
break;
case7: exit(0);
break;
default:printf("\n Wrong choice!");
break;
}
printf("\n do u want to cont...");
}while('y'==getch());
}
void insert_end(int ele)
{
tmp=p;
tmp1=(struct node*)malloc(sizeof(struct node));
tmp1->data=ele;
tmp1->next=NULL;
if(p==NULL)
p=tmp1;
else
{
while(tmp->next!=NULL)
tmp=tmp->next;
tmp->next=tmp1;
}
}
void insert_beg(int ele)
{
tmp=p;
tmp1=(struct node*)malloc(sizeof(struct node));
tmp1->data=ele;
tmp1->next=p;
p=tmp1;
}
void delete_beg()
{
tmp=p;
if(p==NULL)
printf("\n no element to be deleted!! ");
else
{
printf("\nelement deleted - %d", p->data);
p=p->next;
}
}
void delete_end()
{
tmp=p;
struct node* pre;
if(p==NULL)
printf("\n no element to be deleted!! ");
else if (P->next==NULL)
{
printf("\nelement deleted = %d", p->data);
p=NULL;
}
else
{
while(tmp->next!=NULL){
pre=tmp;
}
pre->next=NULL;
printf("nelement deleted -%d", tmp->data);
}
}
void display()
{
tmp=p;
while(tmp!=NULL)
{ printf("\n %d", tmp->data);
tmp=tmp->next;
}
}